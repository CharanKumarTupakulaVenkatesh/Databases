+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| id           | int     |
| company      | varchar |
| salary       | int     |
+--------------+---------+
id is the primary key column for this table.
Each row of this table indicates the company and the salary of one employee.
 

Write an SQL query to find the rows that contain the median salary of each company. While calculating the median, when you sort the salaries of the company, break the ties by id.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Employee table:
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 1  | A       | 2341   |
| 2  | A       | 341    |
| 3  | A       | 15     |
| 4  | A       | 15314  |
| 5  | A       | 451    |
| 6  | A       | 513    |
| 7  | B       | 15     |
| 8  | B       | 13     |
| 9  | B       | 1154   |
| 10 | B       | 1345   |
| 11 | B       | 1221   |
| 12 | B       | 234    |
| 13 | C       | 2345   |
| 14 | C       | 2645   |
| 15 | C       | 2645   |
| 16 | C       | 2652   |
| 17 | C       | 65     |
+----+---------+--------+
Output: 
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 5  | A       | 451    |
| 6  | A       | 513    |
| 12 | B       | 234    |
| 9  | B       | 1154   |
| 14 | C       | 2645   |
+----+---------+--------+
Explanation: 
For company A, the rows sorted are as follows:
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 3  | A       | 15     |
| 2  | A       | 341    |
| 5  | A       | 451    | <-- median
| 6  | A       | 513    | <-- median
| 1  | A       | 2341   |
| 4  | A       | 15314  |
+----+---------+--------+
For company B, the rows sorted are as follows:
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 8  | B       | 13     |
| 7  | B       | 15     |
| 12 | B       | 234    | <-- median
| 11 | B       | 1221   | <-- median
| 9  | B       | 1154   |
| 10 | B       | 1345   |
+----+---------+--------+
For company C, the rows sorted are as follows:
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 17 | C       | 65     |
| 13 | C       | 2345   |
| 14 | C       | 2645   | <-- median
| 15 | C       | 2645   | 
| 16 | C       | 2652   |
+----+---------+--------+

===========================================================

------------1-----------------
select x.id, x.company, x.salary from
(
select id, company, salary, 
row_number() over (partition by company order by salary) as rn
from Employee ) as x
left join
(select company , count(id)/2 as noofempeven
from Employee
group by company
having count(id)%2=0) as b
on x.company = b.company 
left join
(
select company , (count(id)/2)+1 as noofempodd
from Employee
group by company
having count(id)%2=1 ) as a
on x.company = a.company 
where (x.rn = a.noofempodd)
or  x.rn in (b.noofempeven,b.noofempeven+1)

---------------------2---------------------------------
with median as (select id, company, salary, 
row_number() over (partition by company order by salary) as rn
from Employee),
even as (select company , count(id)/2 as noofempeven
from Employee
group by company
having count(id)%2=0),

odd as (select company , (count(id)/2 )+1 as noofempodd
from Employee
group by company
having count(id)%2=1)

select a.id,a.company,a.salary from median a left join even b on a.company=b.company
left join odd c on a.company=c.company
where (a.rn = c.noofempodd)
or  a.rn in (b.noofempeven,b.noofempeven+1)
